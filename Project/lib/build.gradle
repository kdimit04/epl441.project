/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    // https://mvnrepository.com/artifact/net.sf.ucanaccess/ucanaccess
implementation group: 'net.sf.ucanaccess', name: 'ucanaccess', version: '5.0.1'
    // https://mvnrepository.com/artifact/com.healthmarketscience.jackcess/jackcess
implementation group: 'com.healthmarketscience.jackcess', name: 'jackcess', version: '4.0.1'
    // https://mvnrepository.com/artifact/org.hsqldb/hsqldb
testImplementation group: 'org.hsqldb', name: 'hsqldb', version: '2.6.1'
  // https://mvnrepository.com/artifact/jakarta.ws.rs/jakarta.ws.rs-api
implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '3.1.0'
implementation group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '3.0.1'

  implementation group: 'jakarta.inject', name: 'jakarta.inject-api', version: '2.0.1'
  
    
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
project.webAppDirName = 'WebContent'
